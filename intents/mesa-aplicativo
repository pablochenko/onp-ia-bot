const { Card, Suggestion, Payload } = require('dialogflow-fulfillment');

//const v_sedes = require('../json/sedes.json'); 

function mesa_menu(agent) {      
  const payload = lista_aplicativos();   
  agent.add(new Payload(agent.UNSPECIFIED , payload, {rawPayload: true, sendAsMessage: true}));
  
  agent.context.set({ name: 'set_mesa_appens_menu', lifespan: 1, parameters: {} });
  agent.context.set({ name: 'set_menu', lifespan: 1, parameters: {} });
  agent.context.set({ name: 'set_finalizar', lifespan: 1, parameters: {} });
}  


function mesa_appens_menu(agent){
  //let item = agent.parameters.boteta_fec_emision;
  let aplicaciones = [];
  aplicaciones.push([{"text": "Lentitud en APPENS","callback_data":"APPENS_LENTITUD"}],[{"text": "Mover Token","callback_data":"APPENS_TOKEN"}]);

  aplicaciones.push([{"text": "Reasignar documentos","callback_data":"APPENS_DOCU"}],[{"text": "Reemplazar documentos","callback_data":"APPENS_REEM"}]);
  
  aplicaciones.push([{"text": "Inoperar solicitudes","callback_data":"APPENS_INOP"}]);    
  aplicaciones.push([{"text": "Regresar al menú principal","callback_data": "menu"}]);
  aplicaciones.push([{"text": "Finalizar conversación","callback_data": "finalizar"}]);
  const payload = {
      "telegram": {
          "text": '<b>¡Seleccione una aplicación:</b>',
          "reply_markup": {
            "inline_keyboard": aplicaciones
          },
          "parse_mode": "HTML"
        }
      };  
  agent.add(new Payload(agent.UNSPECIFIED , payload, {rawPayload: true, sendAsMessage: true}));
  
  agent.context.set({ name: 'set_mesa_appens_menu', lifespan: 1, parameters: {} });
  agent.context.set({ name: 'set_menu', lifespan: 1, parameters: {} });
  agent.context.set({ name: 'set_finalizar', lifespan: 1, parameters: {} });
}


function mesa_aplicativo(agent) {   

    agent.add("Requerimeintos.....");  

}




function lista_incidencias(){

}

function lista_aplicativos(){    
    let aplicaciones = [];
    let opciones=[];
    aplicaciones.push({"text": "APPENS","callback_data":"APPENS"});
    aplicaciones.push({"text": "STD","callback_data":"STD"});
    aplicaciones.push({"text": "NSP","callback_data":"NSP"});
    aplicaciones.push({"text": "NSTD","callback_data":"NSTD"});    
    aplicaciones.push({"text": "SAA","callback_data":"SAA"});
    aplicaciones.push({"text": "APJ","callback_data":"APJ"});
    opciones.push(aplicaciones);
    aplicaciones = [];
    aplicaciones.push({"text": "NSBR","callback_data":"NSBR"});
    aplicaciones.push({"text": "SIGA","callback_data":"SIGA"}); 
    aplicaciones.push({"text": "REFLEX","callback_data":"REFLEX"});
    aplicaciones.push({"text": "MCCIA","callback_data":"MCCIA"});
    aplicaciones.push({"text": "SGCP","callback_data":"SGCP"});
    aplicaciones.push({"text": "SIAF","callback_data":"SIAF"}); 
    opciones.push(aplicaciones);
    aplicaciones = [];
    aplicaciones.push({"text": "SPIJ","callback_data":"SPIJ"});
    aplicaciones.push({"text": "RCPJ","callback_data":"RCPJ"});
    aplicaciones.push({"text": "NSGA","callback_data":"NSGA"});
    aplicaciones.push({"text": "OTROS","callback_data":"Otros"}); 
    opciones.push(aplicaciones);
    aplicaciones = [];

    opciones.push([{"text": "Regresar al menú principal","callback_data": "menu"}]);
    opciones.push([{"text": "Finalizar conversación","callback_data": "finalizar"}]);
    const payload = {
      "telegram": {
          "text": '<b>¡Seleccione una aplicación:</b>',
          "reply_markup": {
            "inline_keyboard": opciones
          },
          "parse_mode": "HTML"
        }
      };
    return payload;
}

module.exports = {
    mesa_menu,
    mesa_appens_menu
}